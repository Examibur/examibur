plugins {
    id 'com.github.ksoichiro.console.reporter' version '0.5.0'
    id "org.sonarqube" version "2.2.1"
    id "org.unbroken-dome.test-sets" version "1.0.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'jacoco'
apply plugin: 'com.github.ksoichiro.console.reporter'
apply plugin: 'org.unbroken-dome.test-sets'

sourceCompatibility = 1.8
version = '0.1'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.sparkjava:spark-template-freemarker:2.5.5'
    compile 'com.sparkjava:spark-core:2.5.5'
    compile 'org.eclipse.persistence:eclipselink:2.6.4'
    compile 'org.postgresql:postgresql:42.0.0.jre7'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.1'
    compile 'org.apache.logging.log4j:log4j-core:2.8.1'
    compile 'org.flywaydb:flyway-core:4.1.2'
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.google.inject.extensions:guice-assistedinject:4.0'

    testCompile 'junit:junit:4.+'
    testCompile 'org.seleniumhq.selenium:selenium-java:3.3.1'
    testCompile 'org.seleniumhq.selenium:selenium-firefox-driver:3.3.1'
    testCompile 'ru.yandex.qatools.ashot:ashot:1.5.2'

}

testSets {
    integrationTest { dirName = 'integrationtest' }
}


project.integrationTest {
    if( new File("/opt/geckodriver").exists() ) {
        jvmArgs "-Dwebdriver.gecko.driver=/opt/geckodriver"
    }
    
    exclude "ch/examibur/ui/app/**"
    
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    jacoco {
        append = false
        destinationFile = file("jacoco/jacocoInt.exec")
    }
}

jacocoTestReport{
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco/html"
    }
    sourceSets sourceSets.main
    executionData = files("jacoco/jacocoUi.exec", "jacoco/jacocoInt.exec")
}

sonarqube {
    properties {
        property "sonar.jacoco.reportPaths", "jacoco/jacocoUi.exec, jacoco/jacocoInt.exec"
    }
}

compileJava {
    options.encoding = "UTF-8"
}

compileIntegrationTestJava {
    options.encoding = "UTF-8"
}

task deployToTomcat(type: Copy) {
    from zipTree(war.archivePath)
    into 'webapps/ROOT/'
}

assemble.doLast {
    deployToTomcat.execute()
}
